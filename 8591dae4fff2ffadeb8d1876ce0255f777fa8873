{
  "comments": [
    {
      "key": {
        "uuid": "72a12d18_8775e1b5",
        "filename": "src/tools/windows/converter/ms_symbol_server_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2019-06-28T00:00:00Z",
      "side": 1,
      "message": "Maybe rephrase this error message - it sounds like you\u0027re trying to remove a file from a directory. Although, the failure really shouldn\u0027t ever happen, so there\u0027s that.",
      "revId": "8591dae4fff2ffadeb8d1876ce0255f777fa8873",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7be57e1_e536f445",
        "filename": "src/tools/windows/converter/ms_symbol_server_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2019-06-28T00:28:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72a12d18_8775e1b5",
      "revId": "8591dae4fff2ffadeb8d1876ce0255f777fa8873",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "861ae103_0cfc980b",
        "filename": "src/tools/windows/converter/ms_symbol_server_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2019-06-28T00:00:00Z",
      "side": 1,
      "message": "I assume that LR() is a wide-character raw string? I haven\u0027t used these before. Do you know if they are approved for use? It looks like a windows-ism and I wonder if we should use L\"\\\\dbghelp.dll\" instead - but I\u0027m not sure.",
      "revId": "8591dae4fff2ffadeb8d1876ce0255f777fa8873",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fd058aa_6b22a1cf",
        "filename": "src/tools/windows/converter/ms_symbol_server_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2019-06-28T00:28:46Z",
      "side": 1,
      "message": "I don\u0027t know if they are approved. If there is some uncertainty and L-string is approved then I\u0027m happy to change it to that.",
      "parentUuid": "861ae103_0cfc980b",
      "revId": "8591dae4fff2ffadeb8d1876ce0255f777fa8873",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a203161f_37cdee26",
        "filename": "src/tools/windows/converter/ms_symbol_server_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2019-06-28T16:37:51Z",
      "side": 1,
      "message": "I did a search across my Chromium repo for LR\"( and found 38 results (including third_party). Oddly enough there is only one that isn\u0027t in test code, so I don\u0027t know what to make of this, and I couldn\u0027t find any guidance in the style guide or C++ guides. I guess they\u0027re fine?",
      "parentUuid": "1fd058aa_6b22a1cf",
      "revId": "8591dae4fff2ffadeb8d1876ce0255f777fa8873",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afb691d5_a09a9aa5",
        "filename": "src/tools/windows/converter/ms_symbol_server_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2019-06-28T00:00:00Z",
      "side": 1,
      "message": "I *think* it works to pass a full path rather than the module name, but it might invoke some extra failure modes - if dbghelp.dll does get loaded from a different address.\n\nYou could leave it, or move it to the top and just call GetModuleHandle(\"dbghelp.dll\") with no path.",
      "revId": "8591dae4fff2ffadeb8d1876ce0255f777fa8873",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0377c84b_db0eeb4c",
        "filename": "src/tools/windows/converter/ms_symbol_server_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2019-06-28T00:28:46Z",
      "side": 1,
      "message": "I was thinking I wanted to be more precise and only avoid loading if it was loaded from that particular path, but I don\u0027t think it would even help to try and load our own version if we somehow managed to load the system one first. I\u0027ll change to just basename.",
      "parentUuid": "afb691d5_a09a9aa5",
      "revId": "8591dae4fff2ffadeb8d1876ce0255f777fa8873",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fedaecaa_0ea9ec95",
        "filename": "src/tools/windows/converter/ms_symbol_server_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 214,
      "author": {
        "id": 1128439
      },
      "writtenOn": "2019-06-28T00:00:00Z",
      "side": 1,
      "message": "I think there was some discussion about changing the meaning of %S in VC++ and preferring %lS for wide-character strings, but I\u0027m not sure. Be sure to test this path to make sure it prints correctly.",
      "revId": "8591dae4fff2ffadeb8d1876ce0255f777fa8873",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a2351af_cce2cd56",
        "filename": "src/tools/windows/converter/ms_symbol_server_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 214,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2019-06-28T00:28:46Z",
      "side": 1,
      "message": "That\u0027s scary. MS printf/wprintf already does strange stuff with formatting wide characters. I thought it was somewhat reliable that (Microsoft) printf took %s to be narrow and %S to be wide, while wprintf took %s to be wide and %S to be narrow. Googling this, I found all kinds of contradictory accounts of what %ls does and which compilers will give warnings. What is the safest thing to do? Use wprintf and %ls?",
      "parentUuid": "fedaecaa_0ea9ec95",
      "revId": "8591dae4fff2ffadeb8d1876ce0255f777fa8873",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b02a362_fa772cdd",
        "filename": "src/tools/windows/converter/ms_symbol_server_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 214,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2019-06-28T19:07:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4a2351af_cce2cd56",
      "revId": "8591dae4fff2ffadeb8d1876ce0255f777fa8873",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cd07526_c1135bf7",
        "filename": "src/tools/windows/converter/ms_symbol_server_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 214,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2019-06-28T19:55:23Z",
      "side": 1,
      "message": "This is what I remember about VC++ “changing the meaning”:\n\nhttps://devblogs.microsoft.com/cppblog/c-runtime-crt-features-fixes-and-breaking-changes-in-visual-studio-14-ctp1/\n\nThey backed away from that change, but it’s interesting for historical context and closure.\n\nI don’t think there’s been anything since about a change in this area.",
      "parentUuid": "2b02a362_fa772cdd",
      "revId": "8591dae4fff2ffadeb8d1876ce0255f777fa8873",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}