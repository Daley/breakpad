{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7353cf1a_217d774d",
        "filename": "src/common/windows/pdb_source_line_writer.cc",
        "patchSetId": 16
      },
      "lineNbr": 752,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2021-10-07T22:15:21Z",
      "side": 1,
      "message": "BTW, as others mentioned on another recent Breakpad CL, 1 letter variables that are not counters are a bit annoying. \u0027l\u0027 in particular is bad because it looks like a 1 or an \u0027i\u0027, depending on one\u0027s font.\n\nHow about:\nline -\u003e com_line\nl -\u003e line\nin -\u003e inline",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02d3f9dd_b4dee355",
        "filename": "src/common/windows/pdb_source_line_writer.cc",
        "patchSetId": 16
      },
      "lineNbr": 752,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-10-07T22:55:32Z",
      "side": 1,
      "message": "line-\u003edia_line\nl-\u003eline\n\nI can\u0027t change in-\u003einline as inline is a keyword.",
      "parentUuid": "7353cf1a_217d774d",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b11cec27_ae78dac6",
        "filename": "src/common/windows/pdb_source_line_writer.cc",
        "patchSetId": 16
      },
      "lineNbr": 752,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-10-07T22:55:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7353cf1a_217d774d",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dcd092e_77fecb59",
        "filename": "src/common/windows/pdb_source_line_writer.cc",
        "patchSetId": 16
      },
      "lineNbr": 774,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2021-10-07T22:15:21Z",
      "side": 1,
      "message": "Did you mean \"Go to next level\" ?",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "751352c5_8e0becae",
        "filename": "src/common/windows/pdb_source_line_writer.cc",
        "patchSetId": 16
      },
      "lineNbr": 774,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-10-07T22:55:32Z",
      "side": 1,
      "message": "Fixed typo",
      "parentUuid": "0dcd092e_77fecb59",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a85a9b0_bbe89644",
        "filename": "src/common/windows/pdb_source_line_writer.cc",
        "patchSetId": 16
      },
      "lineNbr": 776,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2021-10-07T22:15:21Z",
      "side": 1,
      "message": "GetChildInlines() used here is weird, because the goal is really to set the child inlines.\n\nWhat if the caller passed in a separate std::vector here, and then call SetChildInlines() on success?",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eba5e95_0a033e1c",
        "filename": "src/common/windows/pdb_source_line_writer.cc",
        "patchSetId": 16
      },
      "lineNbr": 776,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-10-07T22:55:32Z",
      "side": 1,
      "message": "I don\u0027t quite understand. The goal here is to pass a pointer to vector, and add inlines to that vector inside GetInlines function.",
      "parentUuid": "7a85a9b0_bbe89644",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2aa04bb8_5f9bfcac",
        "filename": "src/common/windows/pdb_source_line_writer.cc",
        "patchSetId": 16
      },
      "lineNbr": 791,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2021-10-07T22:15:21Z",
      "side": 1,
      "message": "An alternative is to have Inline::Print() do the recursion internally.",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d623b6a_b7ce375d",
        "filename": "src/common/windows/pdb_source_line_writer.cc",
        "patchSetId": 16
      },
      "lineNbr": 791,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-10-07T22:55:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2aa04bb8_5f9bfcac",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f49cfd5_31dd30c0",
        "filename": "src/common/windows/pdb_source_line_writer.h",
        "patchSetId": 16
      },
      "lineNbr": 132,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2021-10-07T22:15:21Z",
      "side": 1,
      "message": "Public first, then private, as mentioned previously on this CL last week.",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9e3c77e_fba35f78",
        "filename": "src/common/windows/pdb_source_line_writer.h",
        "patchSetId": 16
      },
      "lineNbr": 132,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-10-07T22:55:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f49cfd5_31dd30c0",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56e6f673_79e0b382",
        "filename": "src/common/windows/pdb_source_line_writer.h",
        "patchSetId": 16
      },
      "lineNbr": 233,
      "author": {
        "id": 1001934
      },
      "writtenOn": "2021-10-07T22:15:21Z",
      "side": 1,
      "message": "BTW, this isn\u0027t Java / JavaScript. C++ code generally doesn\u0027t use @param.",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7e5b836_2f5afd14",
        "filename": "src/common/windows/pdb_source_line_writer.h",
        "patchSetId": 16
      },
      "lineNbr": 233,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-10-07T22:55:32Z",
      "side": 1,
      "message": "Removed @param.",
      "parentUuid": "56e6f673_79e0b382",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "508c5fbe_85996389",
        "filename": "src/common/windows/pdb_source_line_writer.h",
        "patchSetId": 16
      },
      "lineNbr": 233,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-10-07T22:55:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56e6f673_79e0b382",
      "revId": "9e932259198ed87b5d8e2276e588672b1b9a9d63",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}