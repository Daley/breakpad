{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "40c02b90_d927dd96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T08:24:36Z",
      "side": 1,
      "message": "Dear reviewer\nI provided some material on the loongarch64 architecture at\nhttps://crbug.com/google-breakpad/870\nThank you in advance.",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a6d068a_2f3199ad",
        "filename": "DEPS",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "this one we could land by itself\n\nyou\u0027ll also want to update the default.xml",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5773b38_bb44caa7",
        "filename": "DEPS",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "some bugs were fixed in the latest commit, syncing the update to prevent this patch from being unusable.\ni updated default.xml",
      "parentUuid": "3a6d068a_2f3199ad",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a30b6a48_95ce6656",
        "filename": "DEPS",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-18T18:55:22Z",
      "side": 1,
      "message": "i mean you can make a separate commit/CL that only updates DEPS/default.xml and we could merge that now",
      "parentUuid": "e5773b38_bb44caa7",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d0f7efb_4181fef4",
        "filename": "configure.ac",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "split the host checks into a sep CL as a follow up to adding basic support",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b39c12c_66af2583",
        "filename": "configure.ac",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d0f7efb_4181fef4",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c01846a4_fd59e34e",
        "filename": "configure.ac",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-18T18:55:22Z",
      "side": 1,
      "message": "the host checks are still in this one commit",
      "parentUuid": "0b39c12c_66af2583",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c74a9b7_1da0730e",
        "filename": "configure.ac",
        "patchSetId": 1
      },
      "lineNbr": 130,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-19T12:09:51Z",
      "side": 1,
      "message": "I newly created a CL\nhttps://chromium-review.googlesource.com/c/breakpad/breakpad/+/3964167",
      "parentUuid": "c01846a4_fd59e34e",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0b53415_233b415b",
        "filename": "src/client/linux/dump_writer_common/thread_info.cc",
        "patchSetId": 1
      },
      "lineNbr": 359,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "drop the comment",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16ed028d_645b53d8",
        "filename": "src/client/linux/dump_writer_common/thread_info.cc",
        "patchSetId": 1
      },
      "lineNbr": 359,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0b53415_233b415b",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d83b9a54_5f2b6daf",
        "filename": "src/client/linux/dump_writer_common/thread_info.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "do you need the 64bit check ?  seems like `__loongarch__` alone suffices.\n\nyou should do this in general -- only check the len when actually necessary.",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c379ae1_f9a4d142",
        "filename": "src/client/linux/dump_writer_common/thread_info.h",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "already fixed",
      "parentUuid": "d83b9a54_5f2b6daf",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af1cc64b_fb110512",
        "filename": "src/client/linux/dump_writer_common/thread_info.h",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "why can\u0027t your port define a more common mcontext_t ?",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "925646e0_d8335749",
        "filename": "src/client/linux/dump_writer_common/thread_info.h",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "The mcontext_t definition does not contain floating-point register and can\u0027t  replace user_regs_struct and user_fp_struct\n```c\ntypedef struct mcontext_t\n{\n  unsigned long long __pc;\n  unsigned long long __gregs[32];\n  unsigned int __flags;\n  unsigned long long __extcontext[0] __attribute__((__aligned__(16)));\n} mcontext_t;\n```",
      "parentUuid": "af1cc64b_fb110512",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9ab6004_6f1bfdde",
        "filename": "src/client/linux/handler/exception_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "don\u0027t do this.  fix whatever C or kernel UAPI headers that are broken and forcing this.  userland should never include asm/ directly.",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2860438_fc03cda1",
        "filename": "src/client/linux/handler/exception_handler.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-18T03:10:00Z",
      "side": 1,
      "message": "i removed this",
      "parentUuid": "e9ab6004_6f1bfdde",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c9b6875_45c4618d",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "is this actually necessary ?  does loongson have sep i/d caches ?",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bda3b1e5_7558ed34",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "here is a manual for ibar\nhttps://loongson.github.io/LoongArch-Documentation/LoongArch-Vol1-EN.html#_ibar",
      "parentUuid": "1c9b6875_45c4618d",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "089c20d6_ef0839ab",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "why is this linux specific ?",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8d04c79_9010df34",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "i removed it",
      "parentUuid": "089c20d6_ef0839ab",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a74073e2_134e2752",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "never use bare `asm volatile`.  use `__asm__ __volatile__` instead.",
      "range": {
        "startLine": 92,
        "startChar": 2,
        "endLine": 92,
        "endChar": 14
      },
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e43273e3_32697d4d",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "don\u0027t abuse whitespace to terminate insns.  use `;` instead (i\u0027m assuming your assembler supports that since also everyone does).",
      "range": {
        "startLine": 92,
        "startChar": 22,
        "endLine": 92,
        "endChar": 27
      },
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6503e270_de44e5c8",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "seems like loongarch should be providing C library or kernel syscalls for this instead of having to write custom inline asm",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "170d4238_edf08989",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e43273e3_32697d4d",
      "range": {
        "startLine": 92,
        "startChar": 22,
        "endLine": 92,
        "endChar": 27
      },
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d53a4cb2_4feee1ba",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "I don\u0027t see this system call provided in the C library.",
      "parentUuid": "6503e270_de44e5c8",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7da0902b_8bfcb449",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "already fixed",
      "parentUuid": "a74073e2_134e2752",
      "range": {
        "startLine": 92,
        "startChar": 2,
        "endLine": 92,
        "endChar": 14
      },
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "472f59c1_b2bf9127",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-18T18:55:22Z",
      "side": 1,
      "message": "i\u0027m suggesting you get such APIs added to the kernel and/or C library.  if you look at arm/mips/etc..., they provide syscalls.",
      "parentUuid": "d53a4cb2_4feee1ba",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49f6f65a_3c096e36",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-18T18:55:22Z",
      "side": 1,
      "message": "this hasn\u0027t been fixed",
      "parentUuid": "170d4238_edf08989",
      "range": {
        "startLine": 92,
        "startChar": 22,
        "endLine": 92,
        "endChar": 27
      },
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "134f8133_8c1917c4",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-19T12:09:51Z",
      "side": 1,
      "message": "`FlushInstructionCache()` function is only used in tests, not using it in loongarch64 tests will not cause the test to fail, so I removed this",
      "parentUuid": "49f6f65a_3c096e36",
      "range": {
        "startLine": 92,
        "startChar": 22,
        "endLine": 92,
        "endChar": 27
      },
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af0db3f8_f1e13bff",
        "filename": "src/client/linux/handler/exception_handler_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-19T12:09:51Z",
      "side": 1,
      "message": "I removed it without affecting the test",
      "parentUuid": "472f59c1_b2bf9127",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b676880_355bb8ac",
        "filename": "src/client/linux/handler/minidump_descriptor.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "why do you need this change ?  it isn\u0027t specific to loongson.",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a2f4e6e_55048b18",
        "filename": "src/client/linux/handler/minidump_descriptor.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "i need to add `cstdint` in loongarch gcc-13.0.0 to be able to use uintptr_t, I will test whether I need to add `cstdint` on x86",
      "parentUuid": "0b676880_355bb8ac",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "539b4908_d8103d0a",
        "filename": "src/client/linux/handler/minidump_descriptor.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-18T03:06:56Z",
      "side": 1,
      "message": "I have no problems using gcc-13 on x86, it\u0027s Loongson specific.",
      "parentUuid": "7a2f4e6e_55048b18",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0dc2d2c_c0d415bc",
        "filename": "src/client/linux/handler/minidump_descriptor.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-18T18:55:22Z",
      "side": 1,
      "message": "standard headers should not be ifdef gated.  look in the standards to see what headers provide which types, and then figure out whether we\u0027re missing an include in breakpad, or loongson is broken.\nhttps://pubs.opengroup.org/onlinepubs/9699919799/\n\nif breakpad should be including this header for everyone, then post a CL by itself fixing the issue.",
      "parentUuid": "539b4908_d8103d0a",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18e30ccc_5cee84c6",
        "filename": "src/client/linux/handler/minidump_descriptor.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-19T12:09:51Z",
      "side": 1,
      "message": "Yesterday I tested that gcc-13 for x86 did not include the content after the https://github.com/gcc-mirror/gcc/commit/8ccdc7ce33f5e7ca509e5b9f835ed4719db21ffd commit, so I came to the wrong conclusion.\n`uintptr_t` can be used by `#include \u003cstring\u003e` before the above commit. Commits between 8ccdc7ce33f --\u003e 650eadd6302 break this usage\nI thought including `cstdint` was a way around using `uintptr_t`, I created a new CL to fix that （https://chromium-review.googlesource.com/c/breakpad/breakpad/+/3964166）.",
      "parentUuid": "f0dc2d2c_c0d415bc",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fae59e47_0922c5d4",
        "filename": "src/client/linux/handler/minidump_descriptor.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-26T10:27:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18e30ccc_5cee84c6",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05d5006e_c15727ef",
        "filename": "src/client/linux/microdump_writer/microdump_writer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "never indent the `#`",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "607a448e_e06d79e9",
        "filename": "src/client/linux/microdump_writer/microdump_writer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "05d5006e_c15727ef",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eec72197_2709ba23",
        "filename": "src/client/linux/microdump_writer/microdump_writer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "can\u0027t we use something like `getpagesize()` to handle this instead without any `#if` checks ?",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ebda936_839727e0",
        "filename": "src/client/linux/microdump_writer/microdump_writer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eec72197_2709ba23",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8eb24cf_98e2f2c0",
        "filename": "src/client/linux/microdump_writer/microdump_writer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 286,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "missing space after `#`",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d33cf22_f857bbc0",
        "filename": "src/client/linux/microdump_writer/microdump_writer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 286,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8eb24cf_98e2f2c0",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ac7e19a_16a2b01a",
        "filename": "src/common/dwarf_cfi_to_module.cc",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "add dangling comma and put }; on next line",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c68fcd7d_55915468",
        "filename": "src/common/dwarf_cfi_to_module.cc",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "already fixed",
      "parentUuid": "5ac7e19a_16a2b01a",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9af3e87_f89401f3",
        "filename": "src/common/dwarf_cfi_to_module.h",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "period at the end",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9e30eb8_70f9e21e",
        "filename": "src/common/dwarf_cfi_to_module.h",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9af3e87_f89401f3",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "711c6ba6_e47be068",
        "filename": "src/processor/stackwalk_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 931,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "don\u0027t need the 2nd set of parens",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b449ea0_076bba5b",
        "filename": "src/processor/stackwalk_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 931,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "already fixed",
      "parentUuid": "711c6ba6_e47be068",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ce18509_7eaf25f3",
        "filename": "src/processor/stackwalker_loongarch64.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2022-10-17T09:13:04Z",
      "side": 1,
      "message": "outdated copyright info",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55e4ca0c_f0603d27",
        "filename": "src/processor/stackwalker_loongarch64.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1548943
      },
      "writtenOn": "2022-10-17T13:28:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ce18509_7eaf25f3",
      "revId": "ac75ac4d300c18b25c35b70ee13a4779eb383d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}