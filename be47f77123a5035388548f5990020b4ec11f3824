{
  "comments": [
    {
      "key": {
        "uuid": "7cef0da8_2f99a72b",
        "filename": "docs/sym_upload_v2_protocol.md",
        "patchSetId": 11
      },
      "lineNbr": 46,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-02-19T16:15:19Z",
      "side": 1,
      "message": "Why not make -k optional and not pass the key\u003d parameter at all?",
      "range": {
        "startLine": 44,
        "startChar": 56,
        "endLine": 46,
        "endChar": 12
      },
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36ac82bc_80a460ba",
        "filename": "docs/sym_upload_v2_protocol.md",
        "patchSetId": 11
      },
      "lineNbr": 46,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2020-02-19T23:08:38Z",
      "side": 1,
      "message": "That\u0027s a fair point, I\u0027ll change it to do that.",
      "parentUuid": "7cef0da8_2f99a72b",
      "range": {
        "startLine": 44,
        "startChar": 56,
        "endLine": 46,
        "endChar": 12
      },
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41c9dab5_20170e18",
        "filename": "docs/sym_upload_v2_protocol.md",
        "patchSetId": 11
      },
      "lineNbr": 62,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-02-19T16:15:19Z",
      "side": 1,
      "message": "Since the code and even the rest of this document refers to the new protocol as sym-upload-v2, it’s very confusing for the URL to be v1.",
      "range": {
        "startLine": 62,
        "startChar": 25,
        "endLine": 62,
        "endChar": 27
      },
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9e6d2f4_6a188263",
        "filename": "docs/sym_upload_v2_protocol.md",
        "patchSetId": 11
      },
      "lineNbr": 62,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-02-19T16:15:19Z",
      "side": 1,
      "message": "You already gave the protocol as part of API-URL.",
      "range": {
        "startLine": 62,
        "startChar": 7,
        "endLine": 62,
        "endChar": 15
      },
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b656918f_8a22211a",
        "filename": "docs/sym_upload_v2_protocol.md",
        "patchSetId": 11
      },
      "lineNbr": 62,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2020-02-19T23:08:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9e6d2f4_6a188263",
      "range": {
        "startLine": 62,
        "startChar": 7,
        "endLine": 62,
        "endChar": 15
      },
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8396c4e8_46172b31",
        "filename": "docs/sym_upload_v2_protocol.md",
        "patchSetId": 11
      },
      "lineNbr": 62,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2020-02-19T23:08:38Z",
      "side": 1,
      "message": "Yeah I guess I should remove that from here. It makes sense if you\u0027re thinking about this just as an HTTP/REST path on the server, but I agree that it invites readers to get confused about the version of upload protocol versus version of REST protocol.",
      "parentUuid": "41c9dab5_20170e18",
      "range": {
        "startLine": 62,
        "startChar": 25,
        "endLine": 62,
        "endChar": 27
      },
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17e4b1e5_abffb75e",
        "filename": "docs/sym_upload_v2_protocol.md",
        "patchSetId": 11
      },
      "lineNbr": 68,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-02-19T16:15:19Z",
      "side": 1,
      "message": "Since this step returns an upload_url, why is the checkStatus step even necessary? Why can’t you pass file_name and debug_id to this uploads:create thing and let it do the lookup, returning either an upload URL or a status saying that the symbols are already present?",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 68,
        "endChar": 83
      },
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccb58252_84ba20f3",
        "filename": "docs/sym_upload_v2_protocol.md",
        "patchSetId": 11
      },
      "lineNbr": 68,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2020-02-19T23:08:38Z",
      "side": 1,
      "message": "That was an alternative that we discussed but ultimately the API for that came out awkward. First we didn\u0027t want users who only care about the status to get an upload URL in response, since they don\u0027t expect one. Then, for users who want to override, and therefore don\u0027t care about the status, they need another field to set to say \"no, really, I want an upload URL.\"\n\nThe former case we don\u0027t do in symupload, but the latter is something that symupload already does. Splitting it up into two independent steps resolves both potential issues.",
      "parentUuid": "17e4b1e5_abffb75e",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 68,
        "endChar": 83
      },
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93e1c66b_b0e5116d",
        "filename": "docs/sym_upload_v2_protocol.md",
        "patchSetId": 11
      },
      "lineNbr": 84,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-02-19T16:15:19Z",
      "side": 1,
      "message": "It seems like that would make this step either unnecessary or at least simpler from the client’s perspective too.",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 84,
        "endChar": 0
      },
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d80e51ee_647d7536",
        "filename": "docs/sym_upload_v2_protocol.md",
        "patchSetId": 11
      },
      "lineNbr": 84,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2020-02-19T23:08:38Z",
      "side": 1,
      "message": "I don\u0027t think changing the \"create upload URL\" step(s) would impact how this part works. In order to keep the server stateless (wrt. a given symbol upload), in between these API calls, \"uploads:create\" just calculates a unique upload path and signs it with credentials that allow a timed, anonymous upload.\n\nIdentification and metadata for that upload must be provided once the upload has completed, so that the upload server can handle the request synchronously (from the perspective of the caller).\n\nIf I missed the point of the comment then apologies :)",
      "parentUuid": "93e1c66b_b0e5116d",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 84,
        "endChar": 0
      },
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1683434_a9692ded",
        "filename": "src/common/linux/libcurl_wrapper.cc",
        "patchSetId": 11
      },
      "lineNbr": 273,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2020-02-18T23:16:01Z",
      "side": 1,
      "message": "i think the old code was broken, but since you\u0027re rewriting this, might as well fix -- shouldn\u0027t this be \u003cvoid*\u003e ?",
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69996071_3d95b32f",
        "filename": "src/common/linux/libcurl_wrapper.cc",
        "patchSetId": 11
      },
      "lineNbr": 279,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2020-02-18T23:16:01Z",
      "side": 1,
      "message": "same here",
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efdc59e0_a1d911c4",
        "filename": "src/common/linux/symbol_collector_client.cc",
        "patchSetId": 11
      },
      "lineNbr": 47,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2020-02-18T23:16:01Z",
      "side": 1,
      "message": "the * goes with the type",
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5d7d75d_2e864e97",
        "filename": "src/common/linux/symbol_collector_client.cc",
        "patchSetId": 11
      },
      "lineNbr": 53,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2020-02-18T23:16:01Z",
      "side": 1,
      "message": "not sure if you split this line for clarity, but it can fit on one w/out wrapping.  if you prefer to wrap like this, that\u0027s fine too.",
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "980353a5_a610da09",
        "filename": "src/common/linux/symbol_collector_client.cc",
        "patchSetId": 11
      },
      "lineNbr": 56,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2020-02-18T23:16:01Z",
      "side": 1,
      "message": "indent with args is off by 1",
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffd4addc_e6e85fdc",
        "filename": "src/common/linux/symbol_collector_client.cc",
        "patchSetId": 11
      },
      "lineNbr": 75,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2020-02-18T23:16:01Z",
      "side": 1,
      "message": "this block should be using 2 space indent",
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "358958fc_3a3da07e",
        "filename": "src/common/linux/symbol_collector_client.cc",
        "patchSetId": 11
      },
      "lineNbr": 85,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2020-02-18T23:16:01Z",
      "side": 1,
      "message": "this block should be using 2 space indent",
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "468d584e_4a9d4afd",
        "filename": "src/common/linux/symbol_collector_client.h",
        "patchSetId": 11
      },
      "lineNbr": 63,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2020-02-18T23:16:01Z",
      "side": 1,
      "message": "should have 4 space indent since it\u0027s wrapping the ( ?",
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9f0595c_ced2dd35",
        "filename": "src/common/linux/symbol_collector_client.h",
        "patchSetId": 11
      },
      "lineNbr": 66,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2020-02-18T23:16:01Z",
      "side": 1,
      "message": "the * goes with the type",
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69c8f887_dfe55b21",
        "filename": "src/common/linux/symbol_collector_client.h",
        "patchSetId": 11
      },
      "lineNbr": 69,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2020-02-18T23:16:01Z",
      "side": 1,
      "message": "should have 4 space indent since it\u0027s wrapping the ( ?",
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0c8247b_922406b5",
        "filename": "src/common/linux/symbol_collector_client.h",
        "patchSetId": 11
      },
      "lineNbr": 77,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2020-02-18T23:16:01Z",
      "side": 1,
      "message": "should have 4 space indent since it\u0027s wrapping the ( ?",
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d12d6d1e_e180cda0",
        "filename": "src/common/linux/symbol_upload.cc",
        "patchSetId": 11
      },
      "lineNbr": 218,
      "author": {
        "id": 1131115
      },
      "writtenOn": "2020-02-19T00:54:22Z",
      "side": 1,
      "message": "indent is off",
      "range": {
        "startLine": 218,
        "startChar": 2,
        "endLine": 218,
        "endChar": 4
      },
      "revId": "be47f77123a5035388548f5990020b4ec11f3824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}