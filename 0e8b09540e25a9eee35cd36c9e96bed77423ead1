{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bbce9164_19bdbffd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1172779
      },
      "writtenOn": "2023-06-05T16:16:23Z",
      "side": 1,
      "message": "This may still happen! And it is isn\u0027t a given that these mappings should be merged.\n\nIt is true that a module\u0027s mappings are not required to be consecutive, but they are determined statically by the linker. Breakpad has used this logic because it has been conventional for Chrome and breakpad-using apps to arrange for there to be no spaces in their module\u0027s mappings. You can view the layout of your module\u0027s mappings by running `readelf --segments \u003csome binary\u003e` and examining the LOAD segment addresses.\n\nIf you allow there to be holes in your modules mappings, then breakpad would need some additional logic to be sure that different mappings, potentially separated by empty space or other things mapped in those spaces really belong to the same module or you will still encounter errors parsing them (e.g. all zero debug IDs).\n\nI would recommend you investigate the reason for those spaces in your module\u0027s mappings and eliminate those instead of trying to fix this bug.\n\nCrashpad can handle spaces in your module\u0027s mappings, but it locates modules in a very different way than breakpad does, using the linker\u0027s list of loaded modules, instead of relying solely on the the maps file.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 169
      },
      "revId": "0e8b09540e25a9eee35cd36c9e96bed77423ead1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91426e74_9b9508fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-06-05T16:49:23Z",
      "side": 1,
      "message": "\u003e Crashpad can handle spaces in your module\u0027s mappings, but it locates modules in a very different way than breakpad does, using the linker\u0027s list of loaded modules, instead of relying solely on the the maps file.\n\nThis is an important point. The Breakpad clients are largely superseded by Crashpad. If you can migrate to Crashpad, that would be preferable.",
      "parentUuid": "bbce9164_19bdbffd",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 169
      },
      "revId": "0e8b09540e25a9eee35cd36c9e96bed77423ead1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c204f3e_83c33df0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1578412
      },
      "writtenOn": "2023-06-05T18:02:54Z",
      "side": 1,
      "message": "FYI, the address gap is 4 MB. (4096)\n\nYes, I can take a look at the root cause of it.",
      "parentUuid": "91426e74_9b9508fe",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 169
      },
      "revId": "0e8b09540e25a9eee35cd36c9e96bed77423ead1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff474160_c92472df",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1172779
      },
      "writtenOn": "2023-06-05T18:06:37Z",
      "side": 1,
      "message": "FYI, I have seen a linker bug where an extra page is inserted between LOAD segments when the lower addressed LOAD segment ends very near (or possibly at) a page boundary. A practical \"fix\" might be to just re-build at a slightly different CL.",
      "parentUuid": "9c204f3e_83c33df0",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 169
      },
      "revId": "0e8b09540e25a9eee35cd36c9e96bed77423ead1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1cd78d4_5a67fb48",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1578412
      },
      "writtenOn": "2023-06-05T18:10:26Z",
      "side": 1,
      "message": "BTW, We have the migration on plan. However, we have encountered chromium library conflicts between mini_chromium and our chromium_libassistant, the whole process needs more efforts than we though. So we decide the push the migration in the future after project launch. We want to fix the breakpad issue first. (We are in dogfood, the next cutoff is mid of this month. The deadline is pretty tight)\n\n----\n\nThanks the information Joshua, would you mind point me to the CL of the fix, or point me to where I can make the fix, I am willing to test if that is the root cause.",
      "parentUuid": "9c204f3e_83c33df0",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 169
      },
      "revId": "0e8b09540e25a9eee35cd36c9e96bed77423ead1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5652e18d_cbc632d7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1172779
      },
      "writtenOn": "2023-06-05T18:13:07Z",
      "side": 1,
      "message": "There would be no particular CL. The bug I witnessed (and don\u0027t know for sure is what you\u0027re seeing now) was not consistently reproducible. It only occurred in some unlucky builds that happened to produce LOAD segments of a particular size.",
      "parentUuid": "a1cd78d4_5a67fb48",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 169
      },
      "revId": "0e8b09540e25a9eee35cd36c9e96bed77423ead1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdd064db_027bef45",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1578412
      },
      "writtenOn": "2023-06-05T21:16:27Z",
      "side": 1,
      "message": "Thanks for the information. It makes sense. \n\nI just checked `readelf`. And put the result here https://paste.googleplex.com/6181790011097088, I am not sure if the two empty records in `Section to Segment mapping:` is the root cause. Kindly ask if there is any suspicious point from your knowledge.",
      "parentUuid": "5652e18d_cbc632d7",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 169
      },
      "revId": "0e8b09540e25a9eee35cd36c9e96bed77423ead1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fef59083_c39c4564",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1172779
      },
      "writtenOn": "2023-06-05T21:39:37Z",
      "side": 1,
      "message": "Your first LOAD segment occupies virtual addresses (relative to 0 to be relocatable) 0x0 - 0x8d25a4. Your second LOAD segment begins at address 0x008e2600. The gap between them is 0x008e2600 - 0x8d25a4 \u003d 0x1005c, which is slightly more than 64k. I suspect that your toolchain thinks it is targeting a system with 64K page size.",
      "parentUuid": "fdd064db_027bef45",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 169
      },
      "revId": "0e8b09540e25a9eee35cd36c9e96bed77423ead1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}