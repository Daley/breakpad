{
  "comments": [
    {
      "key": {
        "uuid": "add0e5c7_2814ee71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2020-07-28T23:35:33Z",
      "side": 1,
      "message": "I should have incorporated all the review feedback and made the GN build work. Also I re-tested it against the Crash v2 SymbolCollector server.",
      "revId": "45b252bc04c4bad2093b16239b27404abfcaffa4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b23b9cf8_06657cf6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002222
      },
      "writtenOn": "2020-07-29T00:22:55Z",
      "side": 1,
      "message": "LGTM from a \"compiles in chromium\" (with my DEPS and BUILD.gn patch) perspective:\nhttps://ci.chromium.org/p/chromium/builders/try/mac_chromium_compile_dbg_ng/674235?",
      "revId": "45b252bc04c4bad2093b16239b27404abfcaffa4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4f7035_45ce2c00",
        "filename": "src/common/mac/SymbolCollectorClient.h",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-07-29T00:00:24Z",
      "side": 1,
      "message": "Here, line 87, and line 93: these aren’t really the names of the API. Unless the spec or something else uses these exact names, is there any reason to CamelCaseSmushThemIntoSomethingThatLooksLikeOneWord?",
      "revId": "45b252bc04c4bad2093b16239b27404abfcaffa4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "457b456b_664c42e2",
        "filename": "src/common/mac/SymbolCollectorClient.h",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2020-07-29T17:55:04Z",
      "side": 1,
      "message": "The Proto does use these exact names, yeah. So for instance if we changed the implementation to use gRPC then we\u0027d use exactly that name for the RPC. I can definitely see where you\u0027re coming from, though, since in this case we only refer to the HTTP-REST interface, where the REST verbs are deliberately rephrased to just contain the verb and not the subject/object.\n\nThe reason the Proto isn\u0027t checked in here is a pragmatic one: I just didn\u0027t want two copies going out of sync. I\u0027m the least qualified one to judge what is easiest to understand, since I wrote all the pieces of this, so if you think it\u0027s less confusing to purely refer to the HTTP-REST version of the interface then I\u0027m happy to change all the explanatory comments to that.",
      "parentUuid": "ba4f7035_45ce2c00",
      "revId": "45b252bc04c4bad2093b16239b27404abfcaffa4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aff9237b_239d7e15",
        "filename": "src/common/mac/SymbolCollectorClient.h",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-07-29T21:49:56Z",
      "side": 1,
      "message": "\u003e The Proto does use these exact names, yeah. So for instance if we changed the implementation to use gRPC then we\u0027d use exactly that name for the RPC. I can definitely see where you\u0027re coming from, though, since in this case we only refer to the HTTP-REST interface, where the REST verbs are deliberately rephrased to just contain the verb and not the subject/object.\n\nIf it were me, I’d have used consistent naming throughout the proto and REST interface.\n\nIf there’s nothing public about the proto, then it doesn’t seem very helpful to most people to have those names show up here. Maybe it’s helpful to you, but it’s also actively unhelpful to anyone else who isn’t seeing the proto but is seeing the REST names. For something like that, where it’s helpful to you and you want to keep it, I think it’d be better as an implementation comment in the .m file, where it would appear right next to the REST names that others would be familiar with. I don’t think that having it out here as an interface comment in the .h file contributes anything positive if those names aren’t publicly known.",
      "parentUuid": "457b456b_664c42e2",
      "revId": "45b252bc04c4bad2093b16239b27404abfcaffa4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65c3e101_35640757",
        "filename": "src/common/mac/encoding_util.h",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-07-29T00:00:24Z",
      "side": 1,
      "message": "Write paths into the guards. In Breakpad, we’d use GOOGLE_BREAKPAD_COMMON_MAC_ENCODING_UTIL_H.",
      "revId": "45b252bc04c4bad2093b16239b27404abfcaffa4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "530f82b2_8636eed3",
        "filename": "src/common/mac/encoding_util.h",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2020-07-29T17:55:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65c3e101_35640757",
      "revId": "45b252bc04c4bad2093b16239b27404abfcaffa4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3745c7d_61008971",
        "filename": "src/common/mac/encoding_util.h",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-07-29T00:00:24Z",
      "side": 1,
      "message": "Breakpad’s a bit of a mess on this point, but in Chromium, we usually put the * on the type name, not on the function name or the variable name.",
      "revId": "45b252bc04c4bad2093b16239b27404abfcaffa4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6f33e8d_58432d7c",
        "filename": "src/common/mac/encoding_util.h",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2020-07-29T17:55:04Z",
      "side": 1,
      "message": "Yeah these *s all got moved by me incorrectly formatting using LLVM style. Thankfully Chromium style seems to have moved them back to the typename.",
      "parentUuid": "e3745c7d_61008971",
      "revId": "45b252bc04c4bad2093b16239b27404abfcaffa4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32f897c3_597f9a83",
        "filename": "src/common/mac/encoding_util.h",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-07-29T00:00:24Z",
      "side": 1,
      "message": "and // comments.",
      "revId": "45b252bc04c4bad2093b16239b27404abfcaffa4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72ef0a46_300ea216",
        "filename": "src/common/mac/encoding_util.h",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2020-07-29T17:55:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32f897c3_597f9a83",
      "revId": "45b252bc04c4bad2093b16239b27404abfcaffa4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}