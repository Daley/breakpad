{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c2c400a1_93db0bc1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-13T11:18:04Z",
      "side": 1,
      "message": "FWIW, this particular change is uncontroversial.\nThe original code has always been trivially wrong.\n(The error has gone undetected for so long,\nbecause `mapping.offset` had always been 0.)",
      "revId": "f37ec120a8bad80aa70f50e5fa7b267d5f39f70f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8b3777e_eeeaaf70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-21T20:44:36Z",
      "side": 1,
      "message": "Mike, would you feel like having a look at this trivial change? :)",
      "revId": "f37ec120a8bad80aa70f50e5fa7b267d5f39f70f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69e5722a_6c970d06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2023-07-22T00:47:41Z",
      "side": 1,
      "message": "I haven\u0027t looked exactly at what you\u0027re doing here, but keep in mind that very large programs, including their debug info, can exceed 4GB. so a 32but system might not be able to mmap such a file.  they might not be able to map even smaller files depending on fragmentation in the process memory map.",
      "revId": "f37ec120a8bad80aa70f50e5fa7b267d5f39f70f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c25f338b_2f88a112",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-28T19:33:28Z",
      "side": 1,
      "message": "Can I get an amen? Or a LGTM?",
      "revId": "f37ec120a8bad80aa70f50e5fa7b267d5f39f70f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b8618b6_433c9089",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-08-01T09:22:48Z",
      "side": 1,
      "message": "Replying to resolve the comment.\n\nThe two lines modified by this patch are actually mapping an ELF object file in order to inspect the ELF header (which is located at offset 0).\n\nIn other words, these lines have never been correct.",
      "parentUuid": "69e5722a_6c970d06",
      "revId": "f37ec120a8bad80aa70f50e5fa7b267d5f39f70f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ec44940_78589ae3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2023-08-01T15:40:28Z",
      "side": 1,
      "message": "please rephrase the commit message.  it\u0027s not wrong, but it\u0027s not clear.  maybe something like \"map ELF file from its start\".\n\ni looked at the implementation of MemoryMappedFile and it will truncate the mapping to the current limits ... so it\u0027ll try to get a 4GiB mapping for very large files.  of course that\u0027ll fail, but it already will fail depending on fragmentation.  this code really needs to handle paging itself, but that\u0027s a bigger project.",
      "parentUuid": "8b8618b6_433c9089",
      "revId": "f37ec120a8bad80aa70f50e5fa7b267d5f39f70f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4b0e0bb_03848daf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-08-01T16:30:56Z",
      "side": 1,
      "message": "As far as I understand, the two MemoryMappedFile callers in linux_dumper.cc only require access to the ELF header. They don\u0027t actually need to map the whole file.",
      "parentUuid": "1ec44940_78589ae3",
      "revId": "f37ec120a8bad80aa70f50e5fa7b267d5f39f70f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59aabca2_dfa7cdf6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2023-08-01T17:08:19Z",
      "side": 1,
      "message": "this code absolutely needs more than just the Ehdr.  the Ehdr is only like 64 bytes.\n\n`ElfFileIdentifierFromMappedFile` looks for the file identifier which is stored in loadable segments, so you first need to access the program headers, then the segments themselves.\n\n`ElfFileSoNameFromMappedFile` looks for the shared library name which is stored in loadable segments, so you\u0027d need the program headers, then the dynamic tags, then the strings in the segments the tags point to.  although it looks like the current code looks it up via section headers-\u003esection tables which works, but is weird.\n\neither way, there is nothing in the ELF spec that requires all that data exist in the first 4GiB.  practically speaking, it probably will, but it\u0027s perfectly valid ELF for it to not.",
      "parentUuid": "c4b0e0bb_03848daf",
      "revId": "f37ec120a8bad80aa70f50e5fa7b267d5f39f70f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}