{
  "comments": [
    {
      "key": {
        "uuid": "ae234368_0ca8be67",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-02-27T21:47:50Z",
      "side": 1,
      "message": "lowercaseify",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 14,
        "endChar": 0
      },
      "revId": "99207793324eb19d4d943a4ea734b01b64d0cb36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c4b88f4_74a9f18d",
        "filename": "src/tools/linux/symupload/sym_upload.cc",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-02-27T21:47:50Z",
      "side": 1,
      "message": "Did you want the standard \"C\" locale without being sensitive to the environment or other calls that set the locale for the process? Then use std::locale::classic().\n\nIf you’re using std::locale::classic(), you don’t need a local variable for it, you can just write it in-line instead of “loc” below.\n\nThe default std::locale constructor gives you std::locale::global() which is only std::locale::classic() if nobody’s done std::setlocale(). And probably nobody’s done setlocale(), but that might not always be the case in the future.",
      "revId": "99207793324eb19d4d943a4ea734b01b64d0cb36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb0513c8_b9c71da9",
        "filename": "src/tools/linux/symupload/sym_upload.cc",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-02-27T21:47:50Z",
      "side": 1,
      "message": "lowercaseify",
      "revId": "99207793324eb19d4d943a4ea734b01b64d0cb36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}