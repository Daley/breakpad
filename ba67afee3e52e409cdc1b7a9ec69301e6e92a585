{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b2d2fcb2_22da7c94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "Can you expand on this?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 50
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4691ad03_4b1578bc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-06T16:43:06Z",
      "side": 1,
      "message": "I assume my bug report last month got caught in the spam filter :(\nhttps://paste.debian.net/1285129/\n\nThe issue was further refined here:\nhttps://github.com/rui314/mold/issues/1047\n\nAs far as I can tell, core2md implicitly assumes that the executable segment must be the first segment of the process. The \"merge adjacent sections\" hack doesn\u0027t work. (In fact, I believe it has never worked, but I would need to have a closer look.)",
      "parentUuid": "b2d2fcb2_22da7c94",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 50
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ff376c2_97de5c7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-06T15:29:42Z",
      "side": 1,
      "message": "Would the src/common/linux/dump_symbols.cc change break crashpad?",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdbd4316_78a71fe4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-06T15:45:47Z",
      "side": 1,
      "message": "Looks like `git cl upload` squashed all the patches on the branch and dropped the commit messages? Do I need to make 4 separate branches?",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7eeba5d0_60b80bc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2023-07-06T15:56:39Z",
      "side": 1,
      "message": "i thought we changed this default.  at any rate, use `--no-squash` to upload as a proper chain of commits.",
      "parentUuid": "fdbd4316_78a71fe4",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "423fd551_274fa2c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "\u003e Would the src/common/linux/dump_symbols.cc change break crashpad?\n\nCrashpad is a crash-reporting client. It doesn’t consume dump_symbols output at all. Only the Breakpad processor (such as minidump_stackwalk) consumes dump_symbols output.",
      "parentUuid": "5ff376c2_97de5c7c",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60c75d5d_8b995d57",
        "filename": "src/client/linux/minidump_writer/linux_dumper.cc",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "Note that all of src/client in Breakpad is obsolete and shouldn’t be used. Crashpad is the replacement.\n\nI’ve considered some, but not all, of the changes in this file. I’m not opposed to further consideration, but you’ll need to provide more explanation (requested in the change description) in order to better understand what module mapping layout you’re hoping for this code to process.",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43b49e1b_92b21e4c",
        "filename": "src/client/linux/minidump_writer/linux_dumper.cc",
        "patchSetId": 1
      },
      "lineNbr": 610,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "Don’t leave `#if 0` code in final code. If you mean for this to be obsolete and removed, we trust version control to maintain history. If you mean for this to execute in certain cases, define and test for those cases.",
      "range": {
        "startLine": 591,
        "startChar": 0,
        "endLine": 610,
        "endChar": 6
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c644187_fde450b9",
        "filename": "src/client/linux/minidump_writer/linux_dumper.cc",
        "patchSetId": 1
      },
      "lineNbr": 611,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "You shouldn’t need an initialization at all if you heed the next comment. If you did need an initialization, `\u0027\\0\u0027` would be correct for a `char`. (But you don’t.)",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3865263_d5493a24",
        "filename": "src/client/linux/minidump_writer/linux_dumper.cc",
        "patchSetId": 1
      },
      "lineNbr": 612,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "You need to test `sscanf`’s return value.",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3a476f5_5f7af589",
        "filename": "src/client/linux/minidump_writer/linux_dumper.cc",
        "patchSetId": 1
      },
      "lineNbr": 614,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "1. Unexpected indentation.\n2. Don’t use `goto`.",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28420f60_d7eb416d",
        "filename": "src/common/linux/dump_symbols.cc",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "Hard-coded page size? Does it make more sense to base this on `p_align`?",
      "range": {
        "startLine": 183,
        "startChar": 56,
        "endLine": 183,
        "endChar": 61
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0800371d_19ee4079",
        "filename": "src/common/linux/dump_symbols.cc",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "Use C++-style casts.",
      "range": {
        "startLine": 183,
        "startChar": 31,
        "endLine": 183,
        "endChar": 56
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}