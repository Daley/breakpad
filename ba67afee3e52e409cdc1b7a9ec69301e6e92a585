{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b2d2fcb2_22da7c94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "Can you expand on this?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 50
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4691ad03_4b1578bc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-06T16:43:06Z",
      "side": 1,
      "message": "I assume my bug report last month got caught in the spam filter :(\nhttps://paste.debian.net/1285129/\n\nThe issue was further refined here:\nhttps://github.com/rui314/mold/issues/1047\n\nAs far as I can tell, core2md implicitly assumes that the executable segment must be the first segment of the process. The \"merge adjacent sections\" hack doesn\u0027t work. (In fact, I believe it has never worked, but I would need to have a closer look.)",
      "parentUuid": "b2d2fcb2_22da7c94",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 50
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f5e464a_1120e428",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T17:53:56Z",
      "side": 1,
      "message": "\u003e I assume my bug report last month got caught in the spam filter :(\n\u003e https://paste.debian.net/1285129/\n\u003e \n\u003e The issue was further refined here:\n\u003e https://github.com/rui314/mold/issues/1047\n\u003e \n\u003e As far as I can tell, core2md implicitly assumes that the executable segment must be the first segment of the process. The \"merge adjacent sections\" hack doesn\u0027t work. (In fact, I believe it has never worked, but I would need to have a closer look.)\n\n1. Whatever your expansion on this is should appear in the change description.\n\n2. The links to bug reports are fine‚Äîthey‚Äôre desirable, even, but they serve a different purpose, which is to highlight what reported problems you‚Äôre fixing. Sometimes a bug report has a conclusion in it, but in this case, each link is to one or more giant dumps of output. What I‚Äôm asking here is that whatever conclusion you‚Äôre drawing should also appear in the change description. Completing this sentence would be a start: ‚Äúmold linker output is structured ‚Ä¶‚Äù, keeping in mind that the reference point would be linker output produced by binutils/bfd ld, gold, and lld. You don‚Äôt have to start your sentence that way, I‚Äôm just providing a prompt to help you understand the sort of information that‚Äôs needed. This would be useful to make the change understandable to current reviewers and future readers even if the bug reports did contain a clearer description.",
      "parentUuid": "4691ad03_4b1578bc",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 50
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbbcbda4_f219289e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-07T10:18:34Z",
      "side": 1,
      "message": "Oh... you mean \"please write a proper commit message\" ;)\nMy commit messages were discarded when Gerrit squashed the patches.\nI\u0027ll submit a new un-squashed revision, addressing your suggestions.\nDo I need to include\nChange-Id: Ib94f17e6440cd16a8b5ddce9ec54a334e13c60af\nin the first commit? in all commits?\nfor Gerrit to recognize my new submission as a follow-up to this one?",
      "parentUuid": "8f5e464a_1120e428",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 50
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b6a9450_dd69dc72",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-07T19:47:10Z",
      "side": 1,
      "message": "\u003e Oh... you mean \"please write a proper commit message\" ;)\n\u003e My commit messages were discarded when Gerrit squashed the patches.\n\u003e I\u0027ll submit a new un-squashed revision, addressing your suggestions.\n\u003e Do I need to include\n\u003e Change-Id: Ib94f17e6440cd16a8b5ddce9ec54a334e13c60af\n\u003e in the first commit? in all commits?\n\u003e for Gerrit to recognize my new submission as a follow-up to this one?\n\nSince you‚Äôre going from one to many, don‚Äôt try to use any sort of automatic linking. No `Change-Id` lines. When you have your new changes ready for review, click the ‚Äúüö´ Abandon‚Äù button in the Gerrit UI, and you can provide links to the successor reviews in a message you enter there.",
      "parentUuid": "dbbcbda4_f219289e",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 50
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ff376c2_97de5c7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-06T15:29:42Z",
      "side": 1,
      "message": "Would the src/common/linux/dump_symbols.cc change break crashpad?",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdbd4316_78a71fe4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-06T15:45:47Z",
      "side": 1,
      "message": "Looks like `git cl upload` squashed all the patches on the branch and dropped the commit messages? Do I need to make 4 separate branches?",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7eeba5d0_60b80bc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2023-07-06T15:56:39Z",
      "side": 1,
      "message": "i thought we changed this default.  at any rate, use `--no-squash` to upload as a proper chain of commits.",
      "parentUuid": "fdbd4316_78a71fe4",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "423fd551_274fa2c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "\u003e Would the src/common/linux/dump_symbols.cc change break crashpad?\n\nCrashpad is a crash-reporting client. It doesn‚Äôt consume dump_symbols output at all. Only the Breakpad processor (such as minidump_stackwalk) consumes dump_symbols output.",
      "parentUuid": "5ff376c2_97de5c7c",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f09bcf5_de0a8497",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-07T10:18:34Z",
      "side": 1,
      "message": "I must be missing something... Minidumps produced by crashpad may be processed by breakpad minidump_stackwalk, correct?",
      "parentUuid": "423fd551_274fa2c3",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4718d15_ea940240",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-07T19:47:10Z",
      "side": 1,
      "message": "\u003e I must be missing something... Minidumps produced by crashpad may be processed by breakpad minidump_stackwalk, correct?\n\nCrashpad has its own logic for locating modules and module IDs in a crashing process‚Äô address space. You can‚Äôt really ‚Äúbreak‚Äù it with a dump_syms change unless you‚Äôre changing the module ID in an incompatible way.",
      "parentUuid": "5f09bcf5_de0a8497",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60c75d5d_8b995d57",
        "filename": "src/client/linux/minidump_writer/linux_dumper.cc",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "Note that all of src/client in Breakpad is obsolete and shouldn‚Äôt be used. Crashpad is the replacement.\n\nI‚Äôve considered some, but not all, of the changes in this file. I‚Äôm not opposed to further consideration, but you‚Äôll need to provide more explanation (requested in the change description) in order to better understand what module mapping layout you‚Äôre hoping for this code to process.",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43b49e1b_92b21e4c",
        "filename": "src/client/linux/minidump_writer/linux_dumper.cc",
        "patchSetId": 1
      },
      "lineNbr": 610,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "Don‚Äôt leave `#if 0` code in final code. If you mean for this to be obsolete and removed, we trust version control to maintain history. If you mean for this to execute in certain cases, define and test for those cases.",
      "range": {
        "startLine": 591,
        "startChar": 0,
        "endLine": 610,
        "endChar": 6
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c644187_fde450b9",
        "filename": "src/client/linux/minidump_writer/linux_dumper.cc",
        "patchSetId": 1
      },
      "lineNbr": 611,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "You shouldn‚Äôt need an initialization at all if you heed the next comment. If you did need an initialization, `\u0027\\0\u0027` would be correct for a `char`. (But you don‚Äôt.)",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3865263_d5493a24",
        "filename": "src/client/linux/minidump_writer/linux_dumper.cc",
        "patchSetId": 1
      },
      "lineNbr": 612,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "You need to test `sscanf`‚Äôs return value.",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f90401b6_8e438991",
        "filename": "src/client/linux/minidump_writer/linux_dumper.cc",
        "patchSetId": 1
      },
      "lineNbr": 612,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-07T10:18:34Z",
      "side": 1,
      "message": "I don\u0027t understand.\nSince I test the value of `c`, testing the retval of sscanf is redundant.",
      "parentUuid": "c3865263_d5493a24",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3a476f5_5f7af589",
        "filename": "src/client/linux/minidump_writer/linux_dumper.cc",
        "patchSetId": 1
      },
      "lineNbr": 614,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "1. Unexpected indentation.\n2. Don‚Äôt use `goto`.",
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28420f60_d7eb416d",
        "filename": "src/common/linux/dump_symbols.cc",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "Hard-coded page size? Does it make more sense to base this on `p_align`?",
      "range": {
        "startLine": 183,
        "startChar": 56,
        "endLine": 183,
        "endChar": 61
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0800371d_19ee4079",
        "filename": "src/common/linux/dump_symbols.cc",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2023-07-06T15:57:15Z",
      "side": 1,
      "message": "Use C++-style casts.",
      "range": {
        "startLine": 183,
        "startChar": 31,
        "endLine": 183,
        "endChar": 56
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f79e7c40_2faf8e94",
        "filename": "src/common/linux/dump_symbols.cc",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 1587084
      },
      "writtenOn": "2023-07-07T10:18:34Z",
      "side": 1,
      "message": "I think this is the relevant part in the ELF standard:\n\nAn executable or shared object file\u0027s base address is calculated during execution from three values: the virtual memory load address, the maximum page size, and the lowest virtual address of a program\u0027s loadable segment. To compute the base address, one determines the memory address associated with the lowest p_vaddr value for a PT_LOAD segment. This address is truncated to the nearest multiple of the maximum page size. The corresponding p_vaddr value itself is also truncated to the nearest multiple of the maximum page size. The base address is the difference between the truncated memory address and the truncated p_vaddr value.\n\nHow do I determine the maximum page size?",
      "parentUuid": "28420f60_d7eb416d",
      "range": {
        "startLine": 183,
        "startChar": 56,
        "endLine": 183,
        "endChar": 61
      },
      "revId": "ba67afee3e52e409cdc1b7a9ec69301e6e92a585",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}