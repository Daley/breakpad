{
  "comments": [
    {
      "key": {
        "uuid": "02e47acc_c42a8cf9",
        "filename": "src/common/dwarf_cu_to_module.cc",
        "patchSetId": 1
      },
      "lineNbr": 1201,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2020-07-24T20:59:50Z",
      "side": 1,
      "message": "I think this change is fine, but one possible alternative is to ignore all functions whose end address is less than their start address (ie. they overran the address space). That would match the LLDB logic (according to labath@).",
      "range": {
        "startLine": 1201,
        "startChar": 28,
        "endLine": 1201,
        "endChar": 66
      },
      "revId": "76244590685d21ea8ce418506c176b4e5e7dbb7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ec79459_7474c278",
        "filename": "src/common/dwarf_cu_to_module.cc",
        "patchSetId": 1
      },
      "lineNbr": 1201,
      "author": {
        "id": 1386395
      },
      "writtenOn": "2020-07-24T21:18:24Z",
      "side": 1,
      "message": "I don\u0027t know how lldb represents addresses, but unsigned 64-bit integers (Module::Address) and the literal -1 can have weird interactions when doing comparisons. Also, the two-way invariant this code uses (with a single check at the end) makes it somewhat harder to code it that way.",
      "parentUuid": "02e47acc_c42a8cf9",
      "range": {
        "startLine": 1201,
        "startChar": 28,
        "endLine": 1201,
        "endChar": 66
      },
      "revId": "76244590685d21ea8ce418506c176b4e5e7dbb7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cc305a4_a93c9dba",
        "filename": "src/common/dwarf_cu_to_module.cc",
        "patchSetId": 1
      },
      "lineNbr": 1201,
      "author": {
        "id": 1386395
      },
      "writtenOn": "2020-07-24T21:34:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ec79459_7474c278",
      "range": {
        "startLine": 1201,
        "startChar": 28,
        "endLine": 1201,
        "endChar": 66
      },
      "revId": "76244590685d21ea8ce418506c176b4e5e7dbb7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70e9013b_fa855f2e",
        "filename": "src/common/module.h",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1174099
      },
      "writtenOn": "2020-07-24T20:39:19Z",
      "side": 1,
      "message": "static constexpr?",
      "revId": "76244590685d21ea8ce418506c176b4e5e7dbb7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa7875dd_8ab31666",
        "filename": "src/common/module.h",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1324403
      },
      "writtenOn": "2020-07-24T20:59:50Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "70e9013b_fa855f2e",
      "revId": "76244590685d21ea8ce418506c176b4e5e7dbb7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0669dbf6_407d38b6",
        "filename": "src/common/module.h",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1386395
      },
      "writtenOn": "2020-07-24T21:12:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa7875dd_8ab31666",
      "revId": "76244590685d21ea8ce418506c176b4e5e7dbb7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}