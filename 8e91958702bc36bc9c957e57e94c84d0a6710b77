{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0c721ccd_22860d71",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2021-09-30T12:28:26Z",
      "side": 1,
      "message": "s/BasicString/StringView/",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1f7dee1_6c3f240a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-09-30T18:13:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c721ccd_22860d71",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97d82d9d_bd95a977",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2021-09-30T12:28:26Z",
      "side": 1,
      "message": "A few more comments, but I think this is pretty close now.",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ded80af_e7252432",
        "filename": "src/common/dwarf_cu_to_module.cc",
        "patchSetId": 7
      },
      "lineNbr": 458,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2021-09-30T12:28:26Z",
      "side": 1,
      "message": "Would it work to have qualified_name, unqualified_name, and enclosing_name be pointers to StringView instead?",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5790b29_3b295bfb",
        "filename": "src/common/dwarf_cu_to_module.cc",
        "patchSetId": 7
      },
      "lineNbr": 458,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-09-30T18:13:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ded80af_e7252432",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6f0975b_b14b176f",
        "filename": "src/common/dwarf_cu_to_module.cc",
        "patchSetId": 7
      },
      "lineNbr": 469,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2021-09-30T12:28:26Z",
      "side": 1,
      "message": "Would just using a default-constructed StringView be enough here? I.e.\n\nStringView empty_str;",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fa9148d_ff721471",
        "filename": "src/common/dwarf_cu_to_module.cc",
        "patchSetId": 7
      },
      "lineNbr": 469,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-09-30T18:13:38Z",
      "side": 1,
      "message": "Deleted.",
      "parentUuid": "f6f0975b_b14b176f",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08c8464c_6e381bfd",
        "filename": "src/common/module.cc",
        "patchSetId": 7
      },
      "lineNbr": 401,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2021-09-30T12:28:26Z",
      "side": 1,
      "message": "With the new operator\u003c\u003c, I guess the .str() call isn\u0027t necessary anymore?",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fa55ae1_d1a196e7",
        "filename": "src/common/module.cc",
        "patchSetId": 7
      },
      "lineNbr": 401,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-09-30T18:13:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08c8464c_6e381bfd",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab194f94_ccb53e7e",
        "filename": "src/common/module.h",
        "patchSetId": 7
      },
      "lineNbr": 390,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2021-09-30T12:28:26Z",
      "side": 1,
      "message": "Could this be result-\u003efirst?",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "559845e0_69a40d81",
        "filename": "src/common/module.h",
        "patchSetId": 7
      },
      "lineNbr": 390,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-09-30T18:13:38Z",
      "side": 1,
      "message": "Added parenthesis for clarity.",
      "parentUuid": "ab194f94_ccb53e7e",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11955b45_cd743929",
        "filename": "src/common/string_view.h",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2021-09-30T12:28:26Z",
      "side": 1,
      "message": "I think it would be more common (and i think this is what LLVM\u0027s StringRef, Chromium\u0027s StringPiece, and C++\u0027s string_view does) to not require the data to be null-terminated, and keep track of the length explicitly.\n\nI guess in Breakpad this class wouldn\u0027t need to handle any strings with null bytes in them, so maybe it doesn\u0027t matter. But someone might run into problems with this later, so I think it would be a good idea.",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70207a61_92bbe014",
        "filename": "src/common/string_view.h",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-09-30T18:13:38Z",
      "side": 1,
      "message": "Update to not require the data to be null-terminated and added length_.",
      "parentUuid": "11955b45_cd743929",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "851854c0_eef06a4a",
        "filename": "src/common/string_view.h",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2021-09-30T12:28:26Z",
      "side": 1,
      "message": "If you made the default value \"\" instead of nullptr, you could make it an invariant that data_ is never nullptr, and skip all the null checks below.",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdb7c613_635a7988",
        "filename": "src/common/string_view.h",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-09-30T18:13:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "851854c0_eef06a4a",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bd828c6_9090af98",
        "filename": "src/common/string_view.h",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2021-09-30T12:33:36Z",
      "side": 1,
      "message": "Actually, are the comparison functions even needed at this point? If we don\u0027t need them, maybe we can just skip defining them at all.",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f760e34f_56fa2774",
        "filename": "src/common/string_view.h",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-09-30T18:13:38Z",
      "side": 1,
      "message": "They are used by set comparator in module.h(line 258 and line 266). Function and InlineOrigin both have StringView to refer to their names.",
      "parentUuid": "3bd828c6_9090af98",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d6b0e4a_2356bd9f",
        "filename": "src/common/string_view.h",
        "patchSetId": 7
      },
      "lineNbr": 71,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2021-09-30T12:28:26Z",
      "side": 1,
      "message": "Technically, one is not allowed to call memcmp() with a nullptr argument, even when min_len \u003d\u003d 0. So we\u0027d have to check for that, or ensure that data_ is never null.\n\nAlso, if the strings are null terminated, this could just call strcmp() and return its result directly (it also doesn\u0027t accept null pointer arguments though).",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfe0db1c_4f978a0d",
        "filename": "src/common/string_view.h",
        "patchSetId": 7
      },
      "lineNbr": 71,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-09-30T18:13:38Z",
      "side": 1,
      "message": "Changed to call strcmp().",
      "parentUuid": "4d6b0e4a_2356bd9f",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc2ff23b_f11c450a",
        "filename": "src/common/string_view.h",
        "patchSetId": 7
      },
      "lineNbr": 71,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-09-30T18:13:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d6b0e4a_2356bd9f",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82c5f2a1_145c61e7",
        "filename": "src/common/string_view.h",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 1002927
      },
      "writtenOn": "2021-09-30T12:28:26Z",
      "side": 1,
      "message": "This looks wrong, I think it should be either\n\n  lhs.compare(rhs) !\u003d 0;\n\nor\n\n  !(lhs \u003d\u003d rhs);",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3566dffd_b70059e8",
        "filename": "src/common/string_view.h",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 1403119
      },
      "writtenOn": "2021-09-30T18:13:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82c5f2a1_145c61e7",
      "revId": "8e91958702bc36bc9c957e57e94c84d0a6710b77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}