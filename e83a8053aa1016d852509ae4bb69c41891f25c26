{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "60c12f11_84427c93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300299
      },
      "writtenOn": "2022-12-30T02:00:09Z",
      "side": 1,
      "message": "Follow up to previous CL, with more memory leaks fixed in a better way",
      "revId": "e83a8053aa1016d852509ae4bb69c41891f25c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6de274a0_8598a2e6",
        "filename": "src/common/module.h",
        "patchSetId": 1
      },
      "lineNbr": 295,
      "author": {
        "id": 1172779
      },
      "writtenOn": "2023-01-03T22:19:15Z",
      "side": 1,
      "message": "nit: If the reader does not already know what is_transparent does, they are unlikely to understand what \"heterogeneous lookup\" means. I don\u0027t think it\u0027s really necessary to explain what C++ features do, but if you want to, maybe something like \"allows lookup member functions such as find() to participate in overload resolution using these operators.\"",
      "range": {
        "startLine": 295,
        "startChar": 37,
        "endLine": 295,
        "endChar": 64
      },
      "revId": "e83a8053aa1016d852509ae4bb69c41891f25c26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}