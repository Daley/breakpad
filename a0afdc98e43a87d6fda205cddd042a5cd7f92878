{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a79ecebf_93e9c6da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1386395
      },
      "writtenOn": "2020-10-07T23:36:17Z",
      "side": 1,
      "message": "Thanks for the quick review.",
      "revId": "a0afdc98e43a87d6fda205cddd042a5cd7f92878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f16cfadf_2e58c9be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000684
      },
      "writtenOn": "2020-10-08T14:39:38Z",
      "side": 1,
      "message": "LGTM!  I have reviewed and tested this CL, and I would give it a +2 Code Review, but I don\u0027t seem to have permissions for that.  Could someone with permissions please give this a +2?",
      "revId": "a0afdc98e43a87d6fda205cddd042a5cd7f92878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1956d1b8_7f841a92",
        "filename": "src/common/dwarf/dwarf2reader.cc",
        "patchSetId": 1
      },
      "lineNbr": 1668,
      "author": {
        "id": 1000684
      },
      "writtenOn": "2020-10-07T22:05:10Z",
      "side": 1,
      "message": "Not sure I understand:  If this code is for reading dwarfv4 ranges, why are we adding the base address here when the old code didn\u0027t?",
      "range": {
        "startLine": 1667,
        "startChar": 25,
        "endLine": 1668,
        "endChar": 63
      },
      "revId": "a0afdc98e43a87d6fda205cddd042a5cd7f92878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6228908f_4364ac07",
        "filename": "src/common/dwarf/dwarf2reader.cc",
        "patchSetId": 1
      },
      "lineNbr": 1668,
      "author": {
        "id": 1386395
      },
      "writtenOn": "2020-10-07T23:36:17Z",
      "side": 1,
      "message": "It\u0027s a good question, and a bit subtle. Before this change, the handler kept track of the base address and did this addition itself, which made some sense because every call to AddRange needed the base_address added. But with dwarf5, some do, but many do not. So I moved the base_address handling into the reader. See the change to dwarf_range_list_handler.cc.\n\nI debated what to do here, but adding another switch on all the different forms in AddRange seemed unnecessary, when we could do the math before the call.",
      "parentUuid": "1956d1b8_7f841a92",
      "range": {
        "startLine": 1667,
        "startChar": 25,
        "endLine": 1668,
        "endChar": 63
      },
      "revId": "a0afdc98e43a87d6fda205cddd042a5cd7f92878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b398421d_3a3ed8f4",
        "filename": "src/common/dwarf/dwarf2reader.cc",
        "patchSetId": 1
      },
      "lineNbr": 1668,
      "author": {
        "id": 1000684
      },
      "writtenOn": "2020-10-08T14:39:38Z",
      "side": 1,
      "message": "OK, makes sense.  Thanks for the explanation.",
      "parentUuid": "6228908f_4364ac07",
      "range": {
        "startLine": 1667,
        "startChar": 25,
        "endLine": 1668,
        "endChar": 63
      },
      "revId": "a0afdc98e43a87d6fda205cddd042a5cd7f92878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38382c13_a36e44ad",
        "filename": "src/common/dwarf_cu_to_module.cc",
        "patchSetId": 1
      },
      "lineNbr": 672,
      "author": {
        "id": 1172779
      },
      "writtenOn": "2020-10-08T17:37:47Z",
      "side": 1,
      "message": "This else block used to hang off \"if (ranges_handler)\" but no longer. Change intentional?",
      "range": {
        "startLine": 670,
        "startChar": 7,
        "endLine": 672,
        "endChar": 7
      },
      "revId": "a0afdc98e43a87d6fda205cddd042a5cd7f92878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89f583ee_36680dea",
        "filename": "src/common/dwarf_cu_to_module.cc",
        "patchSetId": 1
      },
      "lineNbr": 672,
      "author": {
        "id": 1386395
      },
      "writtenOn": "2020-10-08T17:55:31Z",
      "side": 1,
      "message": "Intentional, but it does create a slightly different, more aggressive, error-reporting situation. I actually don\u0027t think the else-clause was takable in the original code. I\u0027m not sure if the old situation was intentional or not, but it went like this:\n\nIn dump_symbols.cc, only create a ranges_handler if .debug_ranges is found. So if no .debug_ranges, the handler would always be null, and the code could never report it was missing. (I suppose there might be other clients not in the source base that setup their range handler differently, but both mac and linux did it this way.)\n\nIf the old code encountered a DW_AT_ranges but had no handler, it wouldn\u0027t report an error. (Perhaps a binary that had .debug_ranges stripped but not .debug_info? That\u0027s a weird situation.)\n\nIn the new code, as we don\u0027t know if we want .debug_ranges or .debug_rnglists, dump_symbols.cc always creates a handler. Then, if a DW_AT_ranges attribute is found, but there is no ranges section (of the appropriate kind) in the debug info, then report an error.\n\nMy sense is that, as a practical matter, it doesn\u0027t matter. But I don\u0027t know enough about any use cases not present in the local source to really know.",
      "parentUuid": "38382c13_a36e44ad",
      "range": {
        "startLine": 670,
        "startChar": 7,
        "endLine": 672,
        "endChar": 7
      },
      "revId": "a0afdc98e43a87d6fda205cddd042a5cd7f92878",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}