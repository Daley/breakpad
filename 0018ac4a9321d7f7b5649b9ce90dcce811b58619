{
  "comments": [
    {
      "key": {
        "uuid": "7c688a40_52baeda8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2019-01-29T21:41:22Z",
      "side": 1,
      "message": "this seems like a bug in the crash generation.  i\u0027m not sure the minidump processor should be throwing away data like that.",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47f65076_04c206f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1169079
      },
      "writtenOn": "2019-01-30T08:25:24Z",
      "side": 1,
      "message": "Looking at the minidumps we have in our Firefox crash-reports it simply seems that the address is being sign-extended. All 32-bit minidumps with the MSB set to 1 also have all the upper bits set to 1 in the 64-bit entry while the others don\u0027t. That seems indeed like a problem in minidump generation but I believe there\u0027s value in showing the user the proper crash address instead of the raw value.",
      "parentUuid": "7c688a40_52baeda8",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb80a078_2edceb9e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2019-01-29T21:41:22Z",
      "side": 1,
      "message": "you want to write now:\n\n Bug: google-breakpad:783",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba14b814_e86c89b9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1169079
      },
      "writtenOn": "2019-01-30T08:25:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb80a078_2edceb9e",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ada053a1_ff4c7b6b",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 358,
      "author": {
        "id": 1134731
      },
      "writtenOn": "2019-01-29T18:38:14Z",
      "side": 1,
      "message": "Is there a reason this is `size_t` instead of `uint64_t`?",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a93b5006_14da83c4",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 358,
      "author": {
        "id": 1168100
      },
      "writtenOn": "2019-01-29T21:34:50Z",
      "side": 1,
      "message": "An oversight on my part. I originally wrote a method to return the size of the pointer then I figured out it was overkill. I must have changed the method name but not the return value, I\u0027ll fix it.",
      "parentUuid": "ada053a1_ff4c7b6b",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88cfee73_e2c26378",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 358,
      "author": {
        "id": 1169079
      },
      "writtenOn": "2019-01-30T08:25:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a93b5006_14da83c4",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2126619_ff6f91cd",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 364,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2019-01-29T21:41:22Z",
      "side": 1,
      "message": "alpha is a 64bit arch",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fb25cbc_2f4ee9db",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 364,
      "author": {
        "id": 1169079
      },
      "writtenOn": "2019-01-29T21:55:29Z",
      "side": 1,
      "message": "Since there was a separate MD_CPU_ARCHITECTURE_ALPHA64 definition I thought this stood for a 32-bit variant.",
      "parentUuid": "b2126619_ff6f91cd",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8485333_d24bf344",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 364,
      "author": {
        "id": 1169079
      },
      "writtenOn": "2019-01-29T22:05:04Z",
      "side": 1,
      "message": "Having sifted a bit through Microsoft documentation - mostly because I\u0027m curious - I believe that MD_CPU_ARCHITECTURE_ALPHA is for Alphas running Windows NT 4.0 which was 32-bit only and MD_CPU_ARCHITECTURE_ALPHA64 was for the unreleased 64-bit Alpha port of NT.",
      "parentUuid": "8fb25cbc_2f4ee9db",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bef2251_646ff26b",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 364,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2019-01-29T22:08:20Z",
      "side": 1,
      "message": "hmm, i have no idea the history of this enum.\n\nat the hardware level, there has never been a 32-bit Alpha.  it was designed to be 64-bit from day 0 and every CPU released was purely 64-bit.  which means every OS has always been 64-bit at least at the kernel level.\n\nLinux has never had a 32-bit runtime, and i don\u0027t think any other *nix has either (although i\u0027m not 100% familiar with every variant out there).\n\ni have no idea what Windows did back in its WinNT days (pre-Win2000).  it might have had a 32-bit Alpha userland (perhaps for Win32 API compat?).  maybe 32-bit pointers but 64-bit regs otherwise ?  since minidump came from Microsoft, that might be the reason.  so you could be correct that MS intended MD_CPU_ARCHITECTURE_ALPHA to be 32-bit userland (at the pointer level) and MD_CPU_ARCHITECTURE_ALPHA64 to be 64-bit userland (at the pointer level).",
      "parentUuid": "8fb25cbc_2f4ee9db",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09155379_365cdbba",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 364,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2019-01-29T22:39:29Z",
      "side": 1,
      "message": "considering we basically have zero support for alpha elsewhere in the codebase, lets just omit it entirely here for now and wait for someone who wants to revive alpha to show up",
      "parentUuid": "8bef2251_646ff26b",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "976f2303_2d1b87de",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 364,
      "author": {
        "id": 1169079
      },
      "writtenOn": "2019-01-30T08:25:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "09155379_365cdbba",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36250924_333ef9d2",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2019-01-29T21:41:22Z",
      "side": 1,
      "message": "period at the end",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee498f1e_7264237b",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 1169079
      },
      "writtenOn": "2019-01-30T08:25:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36250924_333ef9d2",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d0e1cb6_870d6f40",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 730,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2019-01-29T22:39:29Z",
      "side": 1,
      "message": "this change looks fine (makes the code a bit more readable), but doesn\u0027t seem to be related to GetAddressForArchitecture.  maybe split that minor clean up out and we can approve/merge that now ?",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04f713c6_0d51a0a2",
        "filename": "src/processor/minidump_processor.cc",
        "patchSetId": 1
      },
      "lineNbr": 730,
      "author": {
        "id": 1169079
      },
      "writtenOn": "2019-01-30T08:25:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8d0e1cb6_870d6f40",
      "revId": "0018ac4a9321d7f7b5649b9ce90dcce811b58619",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}