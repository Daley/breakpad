{
  "comments": [
    {
      "key": {
        "uuid": "3b2aa4e2_fdae7cf1",
        "filename": "src/common/dwarf_cfi_to_module.cc",
        "patchSetId": 11
      },
      "lineNbr": 160,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-03-21T15:24:51Z",
      "side": 1,
      "message": "The entry for vr27 is missing, so the numbers for the next registers are off by one.",
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c907e73f_fc425106",
        "filename": "src/common/dwarf_cfi_to_module.cc",
        "patchSetId": 11
      },
      "lineNbr": 160,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-05-17T21:12:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3b2aa4e2_fdae7cf1",
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d8af750_5a168639",
        "filename": "src/common/dwarf_cfi_to_module.cc",
        "patchSetId": 11
      },
      "lineNbr": 160,
      "author": {
        "id": 1339422
      },
      "writtenOn": "2019-05-28T11:48:54Z",
      "side": 1,
      "message": "Added the entry for \u0027v27\u0027.\nDone.",
      "parentUuid": "3b2aa4e2_fdae7cf1",
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "827601d4_05e94cab",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 102,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-03-21T15:24:51Z",
      "side": 1,
      "message": "Note that if there are rules for registers that are not tracked (e.g. FPRs, vector registers, CR fields), this function call will probably fail. It should still be useful if the frame only handles GPRs and LR. It doesn\u0027t seem trivial to include registers of different sizes (not uint64_t), such as the vector registers.",
      "range": {
        "startLine": 102,
        "startChar": 23,
        "endLine": 102,
        "endChar": 37
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8b5d0eb_eba2f033",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 102,
      "author": {
        "id": 1266792
      },
      "writtenOn": "2019-04-18T05:59:27Z",
      "side": 1,
      "message": "Not sure if this comment means that we need to add FPRs, vector registers etc to the register_names array? (looking at corresponding register_names array for stackwalker_arm64.cc, stackwalker_amd64.cc they dont seem to include such registers and these ppc64 changes are inspired/copied-and-modified from there :))",
      "parentUuid": "827601d4_05e94cab",
      "range": {
        "startLine": 102,
        "startChar": 23,
        "endLine": 102,
        "endChar": 37
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b7fa1de_2ff041bc",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 102,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-05-17T21:12:05Z",
      "side": 1,
      "message": "Ideally yes, since any frame that saves and restores registers that aren\u0027t included in callee_registers should cause FindCallerRegs to fail, if I understand its code correctly, and it won\u0027t even be able to recover the values of the GPRs and LR as a consequence. You can check if this is indeed the case by running this with a program that saves and restores either the FPRs, VRs, or the CR in some function. If it is the case, then I suspect the arm64 version is likely to also have these issues if their vector registers are tracked in the CFI of some frame.\n\nHowever, not handling those doesn\u0027t mean this part is incorrect, it will likely just fail to unwind the frame, and I think it\u0027s better to have this function handle some frames with CFI than none.\n\nIt shouldn\u0027t be too hard to add the FPRs, however, some of the other register would be more complicated, since the RegisterValueMap only handles one size of registers (the VRs and CR are not 64-bit long), so you\u0027d have to user another function or implement this yourself.",
      "parentUuid": "e8b5d0eb_eba2f033",
      "range": {
        "startLine": 102,
        "startChar": 23,
        "endLine": 102,
        "endChar": 37
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "085ec4a9_3e21e66e",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 102,
      "author": {
        "id": 1339422
      },
      "writtenOn": "2019-07-04T05:17:22Z",
      "side": 1,
      "message": "We have investigated the code for IntelX86_64(AMD64) platform for stack unwinding.\nIt is not supporting the reading of Floating point and XMM(SSE) register values from Symbol file, while stack unwinding using CFI frame info.\nThe Map \u0027StackwalkerAMD64CFIWalker::RegisterSet cfi_register_map_[]\u0027 does not contain the names of Floating point and XMM(SSE) registers.\nSo as per the parity first we will raise the request for Breakpad community, to add support for handling Floating point and XMM(SSE) registers while stack unwinding using CFI frame information.\nOnce it has been added for IntelX86_64(AMD64) platform, we will add the support for Power platform.",
      "parentUuid": "5b7fa1de_2ff041bc",
      "range": {
        "startLine": 102,
        "startChar": 23,
        "endLine": 102,
        "endChar": 37
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf1334d4_0c5ab880",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 102,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-08-06T14:13:18Z",
      "side": 1,
      "message": "Ok! Keep in mind for the future that besides the FPs and VRs there are also other registers that could be handled like the CR fields, XER, CTR, etc.",
      "parentUuid": "085ec4a9_3e21e66e",
      "range": {
        "startLine": 102,
        "startChar": 23,
        "endLine": 102,
        "endChar": 37
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98c1bcf1_7420bead",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 119,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-03-21T15:24:51Z",
      "side": 1,
      "message": "In some cases, the ABI v2 specifies that the caller should save R2, so it\u0027s probably safer in the general case not to assume it was unchanged and remove this condition (leaving only R14-R31).",
      "range": {
        "startLine": 119,
        "startChar": 16,
        "endLine": 119,
        "endChar": 24
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "253c67d5_2a5ae5e5",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 119,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-05-17T21:12:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "98c1bcf1_7420bead",
      "range": {
        "startLine": 119,
        "startChar": 16,
        "endLine": 119,
        "endChar": 24
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "843b5c4d_7713ae4a",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 119,
      "author": {
        "id": 1339422
      },
      "writtenOn": "2019-05-28T11:48:54Z",
      "side": 1,
      "message": "Removed the (i\u003d\u003d2) condition.\nDone.",
      "parentUuid": "98c1bcf1_7420bead",
      "range": {
        "startLine": 119,
        "startChar": 16,
        "endLine": 119,
        "endChar": 24
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "661d7646_1ccf1f81",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 130,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-03-21T15:24:51Z",
      "side": 1,
      "message": "This comment is confusing, since CFI can\u0027t recover PC explicitly, so I think it should be removed. This means the condition below should always be true, although it doesn\u0027t really hurt.",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 130,
        "endChar": 64
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58bd99a4_d69f285e",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 130,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-05-17T21:12:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "661d7646_1ccf1f81",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 130,
        "endChar": 64
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb0c5f01_9c0b2c47",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 130,
      "author": {
        "id": 1339422
      },
      "writtenOn": "2019-05-28T11:48:54Z",
      "side": 1,
      "message": "Removed the comment.\nDone.",
      "parentUuid": "661d7646_1ccf1f81",
      "range": {
        "startLine": 130,
        "startChar": 2,
        "endLine": 130,
        "endChar": 64
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0994afe1_96671e79",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 159,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-03-21T15:24:51Z",
      "side": 1,
      "message": "I\u0027m not sure that this function adds anything to what GetCallerByFramePointer already does. The callee might indeed have saved LR in the caller\u0027s frame (at caller_sp + 16), as specified in the ABI, but I think it\u0027s unlikely it would write LR to any other place in the caller\u0027s frame. This means that scanning outside this address in the caller\u0027s frame might not be useful, and this specific address is already used in GetCallerByFramePointer.",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 159,
        "endChar": 55
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ded6d9b6_a0d82018",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 159,
      "author": {
        "id": 1266792
      },
      "writtenOn": "2019-04-12T11:19:12Z",
      "side": 1,
      "message": "Attempted to correct this in patchset 13 and 14, tried to make it logically the same as what amd64 and arm64 are doing. For both these arches, the caller_sp is the address right above the address at which caller_ip is pushed on the stack\n\nppc64 however seems to be trickier. As per the ABI here http://openpowerfoundation.org/wp-content/uploads/resources/leabi/content/dbdoclet.50655240___RefHeading___Toc377640582.html \nabove the caller_ip (in this case LR) there is TOC and (optional) data. So for intel and arm, caller_ip_address+8 gives caller_sp, for ppc64 looking at the ABI caller_ip_address+8 should go to TOC\u0027s address, but not sure when to and when not to skip the (optional) data. For now, in patchset 13/14, have set caller_sp to caller_ip_address+16 (always skip optional)",
      "parentUuid": "0994afe1_96671e79",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 159,
        "endChar": 55
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67010daa_5494c431",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 159,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-05-17T21:12:05Z",
      "side": 1,
      "message": "See the comment in patchset 14.",
      "parentUuid": "ded6d9b6_a0d82018",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 159,
        "endChar": 55
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "302b0499_33db1e74",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 159,
      "author": {
        "id": 1339422
      },
      "writtenOn": "2019-07-04T05:17:22Z",
      "side": 1,
      "message": "Fixed this review comment in PatchSet 15.\nAs per the suggetion in review comment, removed the GetCallerByStackScan() function.",
      "parentUuid": "67010daa_5494c431",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 159,
        "endChar": 55
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9a7d800_46e72b07",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 159,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-08-06T14:13:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "302b0499_33db1e74",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 159,
        "endChar": 55
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b1ad21a_f6cf4137",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 199,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-03-21T15:24:51Z",
      "side": 1,
      "message": "Note that this condition used to terminate the stack walk. Since this function is now called from GetCallerFrame, it could cause another method to be used instead. It isn\u0027t clear to me which part of the condition should stop the walk and which part should allow another method to try to unwind the stack.",
      "range": {
        "startLine": 199,
        "startChar": 6,
        "endLine": 199,
        "endChar": 49
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0047e722_d0dcf82f",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 199,
      "author": {
        "id": 1266792
      },
      "writtenOn": "2019-04-08T10:17:05Z",
      "side": 1,
      "message": "Both these conditions (caller_sp \u003c callee_sp and ip \u003c\u003d1 below) are also checked in TerminateWalk called right at the end in GetCallerFrame which should stop the walk correctly\n\nI guess these checks are redundant and can be removed from here (stackwalker_arm64.cc doesnt seem to have both these checks in GetCallerByFramePointer)",
      "parentUuid": "2b1ad21a_f6cf4137",
      "range": {
        "startLine": 199,
        "startChar": 6,
        "endLine": 199,
        "endChar": 49
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "971a89a4_6d905777",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 199,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-05-17T21:12:05Z",
      "side": 1,
      "message": "Even though the condition in TerminateWalk is similar, what I don\u0027t know is whether the conditions in this function should somehow immediately terminate the stack walk as before, or allow the calling function (GetCallerFrame) to try to unwind the stack another way. The comment says that it could be either an error or an indication of the end of the stack. TerminateWalk only gets called at the end of GetCallerFrame.",
      "parentUuid": "0047e722_d0dcf82f",
      "range": {
        "startLine": 199,
        "startChar": 6,
        "endLine": 199,
        "endChar": 49
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d542d28_8f16d9c9",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 199,
      "author": {
        "id": 1339422
      },
      "writtenOn": "2019-07-04T05:17:22Z",
      "side": 1,
      "message": "Fixed this review comment in PatchSet 15.\n\nRemoved the conditions \u0027stack_pointer \u003c\u003d last_frame-\u003econtext.gpr[1]\u0027 as these are also checked in TerminateWalk called right at the end in GetCallerFrame which should stop the walk correctly.\n\t\nSo if GetMemoryAtAddress() returns false then this function returns NULL.\nThen GetCallerFrame() function ‘frame’ value is reset to ‘NULL’ so it will return NULL.\t\nThis will cause Stackwalker::Walk to return and stack walk will get terminated.",
      "parentUuid": "971a89a4_6d905777",
      "range": {
        "startLine": 199,
        "startChar": 6,
        "endLine": 199,
        "endChar": 49
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "567e5ecd_d76d2ac9",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 199,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-08-06T14:13:18Z",
      "side": 1,
      "message": "Strictly speaking there is one case with this condition removed which is different: if this is the first unwind, TerminateWalk doesn\u0027t check for equality to determine if the walk should be stopped. The condition that was removed always checked for equality. To preserve the previous behavior, you could keep this condition and the comment. Now that GetCallerByFramePointer is the last unwind method to be called, this will cause the stack walk to terminate as before.",
      "parentUuid": "9d542d28_8f16d9c9",
      "range": {
        "startLine": 199,
        "startChar": 6,
        "endLine": 199,
        "endChar": 49
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8e9fd94_db17e9f8",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 210,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-03-21T15:24:51Z",
      "side": 1,
      "message": "See above.",
      "range": {
        "startLine": 210,
        "startChar": 6,
        "endLine": 210,
        "endChar": 22
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc273c11_6444eaf3",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 210,
      "author": {
        "id": 1266792
      },
      "writtenOn": "2019-04-08T10:17:05Z",
      "side": 1,
      "message": "Addressed above",
      "parentUuid": "b8e9fd94_db17e9f8",
      "range": {
        "startLine": 210,
        "startChar": 6,
        "endLine": 210,
        "endChar": 22
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f46d62ab_64d95093",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 210,
      "author": {
        "id": 1339422
      },
      "writtenOn": "2019-07-04T05:17:22Z",
      "side": 1,
      "message": "Fixed this review comment in PatchSet 15.\n\nRemoved the conditions \u0027instruction \u003c\u003d 1\u0027 as these are also checked in TerminateWalk called right at the end in GetCallerFrame which should stop the walk correctly.\n\t\nSo if GetMemoryAtAddress() returns false then this function returns NULL.\nThen GetCallerFrame() function ‘frame’ value is reset to ‘NULL’ so it will return NULL.\t\nThis will cause Stackwalker::Walk to return and stack walk will get terminated.",
      "parentUuid": "cc273c11_6444eaf3",
      "range": {
        "startLine": 210,
        "startChar": 6,
        "endLine": 210,
        "endChar": 22
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "229599d1_58e79ef3",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 210,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-08-06T14:13:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f46d62ab_64d95093",
      "range": {
        "startLine": 210,
        "startChar": 6,
        "endLine": 210,
        "endChar": 22
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71959331_95217aef",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 237,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-03-21T15:24:51Z",
      "side": 1,
      "message": "whitespace",
      "range": {
        "startLine": 237,
        "startChar": 0,
        "endLine": 237,
        "endChar": 1
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e789077_5fc4e8d6",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 237,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-05-17T21:12:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "71959331_95217aef",
      "range": {
        "startLine": 237,
        "startChar": 0,
        "endLine": 237,
        "endChar": 1
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfee5b24_08e6284d",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 237,
      "author": {
        "id": 1339422
      },
      "writtenOn": "2019-05-28T11:48:54Z",
      "side": 1,
      "message": "Removed the extra whitespace.\nDone.",
      "parentUuid": "71959331_95217aef",
      "range": {
        "startLine": 237,
        "startChar": 0,
        "endLine": 237,
        "endChar": 1
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d41932d_db58161d",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 242,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-03-21T15:24:51Z",
      "side": 1,
      "message": "whitespace",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 242,
        "endChar": 2
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cb6a0ed_0e0377f8",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 242,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-05-17T21:12:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1d41932d_db58161d",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 242,
        "endChar": 2
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c84d4ff_024e5225",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 242,
      "author": {
        "id": 1339422
      },
      "writtenOn": "2019-05-28T11:48:54Z",
      "side": 1,
      "message": "Removed the extra whitespace.\nDone.",
      "parentUuid": "1d41932d_db58161d",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 242,
        "endChar": 2
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abf83102_c1bc33c5",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 243,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-03-21T15:24:51Z",
      "side": 1,
      "message": "whitespace",
      "range": {
        "startLine": 243,
        "startChar": 19,
        "endLine": 243,
        "endChar": 20
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92347ecd_b1651271",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 243,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-05-17T21:12:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "abf83102_c1bc33c5",
      "range": {
        "startLine": 243,
        "startChar": 19,
        "endLine": 243,
        "endChar": 20
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b615dec_2dfb3074",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 243,
      "author": {
        "id": 1339422
      },
      "writtenOn": "2019-05-28T11:48:54Z",
      "side": 1,
      "message": "Removed the extra whitespace.\nDone.",
      "parentUuid": "abf83102_c1bc33c5",
      "range": {
        "startLine": 243,
        "startChar": 19,
        "endLine": 243,
        "endChar": 20
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64060054_31da0ae6",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 259,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-03-21T15:24:51Z",
      "side": 1,
      "message": "I think this comment makes more sense in the beginning of this function.",
      "range": {
        "startLine": 252,
        "startChar": 2,
        "endLine": 259,
        "endChar": 67
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd9f63c1_ff1364a4",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 259,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-05-17T21:12:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "64060054_31da0ae6",
      "range": {
        "startLine": 252,
        "startChar": 2,
        "endLine": 259,
        "endChar": 67
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8de1043_971edbee",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 259,
      "author": {
        "id": 1339422
      },
      "writtenOn": "2019-05-28T11:48:54Z",
      "side": 1,
      "message": "Moved the comment at the start of the function.\nDone.",
      "parentUuid": "64060054_31da0ae6",
      "range": {
        "startLine": 252,
        "startChar": 2,
        "endLine": 259,
        "endChar": 67
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d578d8f_5c394816",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 270,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-03-21T15:24:51Z",
      "side": 1,
      "message": "I think context.srr0 in this comment was already correct.",
      "range": {
        "startLine": 270,
        "startChar": 20,
        "endLine": 270,
        "endChar": 22
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8bd111b_f7cab833",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 270,
      "author": {
        "id": 1335453
      },
      "writtenOn": "2019-05-17T21:12:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4d578d8f_5c394816",
      "range": {
        "startLine": 270,
        "startChar": 20,
        "endLine": 270,
        "endChar": 22
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "babe7776_7cf2f39e",
        "filename": "src/processor/stackwalker_ppc64.cc",
        "patchSetId": 11
      },
      "lineNbr": 270,
      "author": {
        "id": 1339422
      },
      "writtenOn": "2019-05-28T11:48:54Z",
      "side": 1,
      "message": "Reverted to \u0027context.srr0\u0027\nDone",
      "parentUuid": "4d578d8f_5c394816",
      "range": {
        "startLine": 270,
        "startChar": 20,
        "endLine": 270,
        "endChar": 22
      },
      "revId": "2c42b312c9f04bd5e1e30b547f6212169521bdb3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}